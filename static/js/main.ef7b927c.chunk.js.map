{"version":3,"sources":["init_data/initDocuments.js","init_data/initForms.js","managers/utils.js","managers/documents.js","components/Note.js","components/Archive.js","managers/forms.js","components/DailyFormCheck.js","components/DailyFormEdit.js","components/DailyForm.js","components/FormsHome.js","App.js","serviceWorkerRegistration.ts","reportWebVitals.ts","theme.js","index.js"],"names":["db","Localbase","initDocument","a","collection","doc","get","add","Document","title","content","type","documentTypes","written","Date","toDateString","creationDate","modificationDate","initDailyForm","Form","subtitle","help","formTypes","daily","Question","order","undefined","parent_form","status","init","simple","questionTypes","questionSubtypes","subType","dataFilter","result","filter","key","Array","isArray","map","data","isEmpty","tableName","then","record","console","log","initializeDB","getDocument","document","getDocuments","keys","docs","i","id","updateDocument","update","useStyles","makeStyles","theme","paper","padding","fontWeight","fontSize","paddingBottom","buttonGroup","paddingTop","Note","classes","useParams","history","useHistory","useState","setDocument","useEffect","Paper","elevation","className","Grid","container","direction","item","TextField","label","variant","onChange","e","other","target","value","fullWidth","justifyContent","ButtonGroup","color","aria-label","Button","onClick","saveDocument","startIcon","push","handleResetDocument","width","section","sectionTitle","sectionTable","height","editButton","textDecoration","Archive","selection","setSelection","documents","setDocuments","writtenMemoriesColumns","field","headerName","render","rowData","tableData","renderCell","params","to","encodeURIComponent","row","alignItems","Typography","IconButton","size","keys_list","delete_dump","delete","Promise","all","deleteDocuments","style","rows","columns","pageSize","checkboxSelection","disableSelectionOnClick","autoheight","onSelectionModelChange","newSelection","prevSelection","selectionModel","getDailyForm","form","dailyForm","props","questions","sort","b","marginTop","questionTitle","margint","spacing","editDailyFormQuestion","marginBottom","switch","marginRight","DailyFormCheck","tempDailyFormValues","setTempDailyFormValues","initValuesDailyForm","parentForm","parentQuestion","handleDailyFormChange","preventDefault","prev","q","Number","checked","length","justify","values_list","data_dump","forEach","saveDailyFormValues","Checkbox","toString","name","Tooltip","placement","editDailyFormQuestionField","iconButton","DailyFormEdit","setUpdate","editDailyFormQuestions","setEditDailyFormQuestions","handleEditQuestionDailyForm","split","questionOrder","questionName","prevQuestions","prevEditQuestions","Math","random","AddCircle","Replay","questions_list","new_questions_dump","del_questions_dump","mod_questions_dump","saveDailyFormQuestions","onDragEnd","source","index","destination","auxQuestion","splice","question","droppableId","provided","ref","innerRef","droppableProps","deleted","draggableId","draggableProps","dragHandleProps","DragIndicator","defaultValue","disabled","prevQuestion","handleDeleteDailyQuestion","placeholder","DailyForm","setDailyForm","edit","setEdit","FormControlLabel","control","Switch","inputProps","labelPlacement","FormsHome","drawerWidth","root","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","palette","primary","menuButton","toolbar","mixins","drawerPaper","flexGrow","drawerHeader","App","mobileOpen","setMobileOpen","handleDrawerToggle","links","text","link","icon","component","Placeholder","exact","DrawerComponent","Fragment","List","ListItem","Link","ListItemIcon","ListItemText","AppBar","position","Toolbar","edge","noWrap","Hidden","smUp","implementation","Drawer","open","onClose","ModalProps","keepMounted","Divider","xsDown","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","main","secondary","typography","subtitle1","ReactDOM","ThemeProvider","CssBaseline","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ef7b927c.chunk.js","sourcesContent":["import Localbase from \"localbase\";\n\nlet db = new Localbase(\"memories\");\n\nconst initDocument = async () => {\n  // Creates a init DB for the Daily form if it doesn't already exists\n\n  const initExists = await db.collection(\"documents\").doc(\"temp\").get();\n  if (initExists) return false;\n\n  db.collection(\"documents\")\n    .doc(\"temp\")\n    .add(\n      {\n        ...Document,\n        title: \"Written memory\",\n        content: \"This is the first document written here\",\n        type: documentTypes.written,\n      },\n      \"temp\"\n    );\n};\n\n/***************************************************************************/\n/********************************Documents**********************************/\n/***************************************************************************/\n\nconst documentTypes = { written: \"written\" };\n\nconst Document = {\n  title: new Date().toDateString(),\n  content: \"Write here what you need\",\n  creationDate: new Date(),\n  modificationDate: new Date(),\n  type: documentTypes.written,\n};\n\nexport { Document, initDocument, documentTypes };\n","import Localbase from \"localbase\";\n\nlet db = new Localbase(\"memories\");\n\nconst initDailyForm = async () => {\n  // Creates a init DB for the Daily form if it doesn't already exists\n\n  const initExists = await db.collection(\"forms\").doc(\"dailyForm\").get();\n  if (initExists) return false;\n\n  db.collection(\"forms\").add(\n    {\n      ...Form,\n      title: \"Daily form\",\n      subtitle: \"Check your quick actions\",\n      help: \"Save your daily actions/tokens so you can make a quick track of them. You can also edit this form in order to add or delete new checks\",\n      type: formTypes.daily,\n    },\n    \"dailyForm\"\n  );\n\n  db.collection(\"questions\").add({\n    ...Question,\n    order: 0,\n    title: \"Good Sleep\",\n    subtitle: \"I slept good today\",\n    help: undefined,\n    parent_form: \"dailyForm\",\n    status: status.init,\n  });\n\n  db.collection(\"questions\").add({\n    ...Question,\n    order: 2,\n    title: \"Happy cat\",\n    subtitle: \"My cat wanted me to pet him\",\n    help: undefined, //optional\n    parent_form: \"dailyForm\",\n    status: status.init,\n  });\n  db.collection(\"questions\").add({\n    ...Question,\n    order: 3,\n    title: \"Overworked\",\n    subtitle: \"Today I overworked\",\n    help: undefined, //optional\n    parent_form: \"dailyForm\",\n    status: status.init,\n  });\n  db.collection(\"questions\").add({\n    ...Question,\n    order: 4,\n    title: \"Morning exercises\",\n    subtitle: \"I did my morning exercises routine\",\n    help: undefined, //optional\n    parent_form: \"dailyForm\",\n    status: status.init,\n  });\n  db.collection(\"questions\").add({\n    ...Question,\n    order: 5,\n    title: \"Had breakfast\",\n    subtitle: \"Had breakfast\",\n    help: undefined, //optional\n    parent_form: \"dailyForm\",\n    status: status.init,\n  });\n  db.collection(\"questions\").add({\n    ...Question,\n    order: 6,\n    title: \"Had lunch\",\n    subtitle: \"Had lunch\",\n    help: undefined, //optional\n    parent_form: \"dailyForm\",\n    status: status.init,\n  });\n  db.collection(\"questions\").add({\n    ...Question,\n    order: 7,\n    title: \"Had dinner\",\n    subtitle: \"Had dinner\",\n    help: undefined, //optional\n    parent_form: \"dailyForm\",\n    status: status.init,\n  });\n};\n\n/***************************************************************************/\n/***********************************Forms***********************************/\n/***************************************************************************/\n\nconst formTypes = {\n  daily: \"daily\",\n};\n\nconst Form = {\n  title: \"Your Title\",\n  subtitle: \"Your Subtitle\",\n  help: \"This field should be of help to remember the reason of this form. Sometimes we need more help to remember or understand\",\n  creationDate: new Date(),\n  modificationDate: new Date(),\n  type: formTypes.simple,\n};\n\n/***************************************************************************/\n/********************************Questions**********************************/\n/***************************************************************************/\n\nconst questionTypes = {\n  check: \"check\",\n  simple: \"simple\",\n};\n\nconst questionSubtypes = {\n  square: \"square\",\n};\n\nconst status = {\n  init: \"init\",\n};\n\nconst Question = {\n  order: 0,\n  title: \"Your Title\",\n  subtitle: \"Your Subtitle\",\n  help: \"This field should be of help to remember the reason of this form. Sometimes we need more help to remember or understand\",\n  creationDate: new Date(),\n  modificationDate: new Date(),\n  type: questionTypes.simple,\n  subType: questionSubtypes.square,\n  parent_form: undefined,\n  status: status.init,\n};\n\n/***************************************************************************/\n/**********************************Values***********************************/\n/***************************************************************************/\n\nconst Value = {\n  value: undefined,\n  creationDate: new Date(),\n  parent_form: undefined,\n  parent_question: undefined,\n};\n\nexport {\n  initDailyForm,\n  Form,\n  formTypes,\n  questionTypes,\n  questionSubtypes,\n  Question,\n  Value,\n};\n","import { initDailyForm } from \"./../init_data/initForms\";\nimport { initDocument } from \"./../init_data/initDocuments\";\n\nimport Localbase from \"localbase\";\n\nconst dataFilter = (result, filter, key = true) => {\n  if (!result) return [{}];\n  if (!Array.isArray(result)) return [{ ...result.data, key: result.key }];\n  if (key) result = result.map(({ data, key }) => ({ ...data, key }));\n  if (filter) {\n    return result.filter(filter);\n  }\n  return result;\n};\n\nconst isEmpty = async (tableName, key) => {\n  // TODO: Replace all Localbase names with an easier import CONST\n  let db = new Localbase(\"memories\");\n  const result = await db\n    .collection(tableName)\n    .doc(key)\n    .get()\n    .then((record) => (!record ? true : false));\n  console.log(result);\n  return false;\n};\n\n// Used to avoid any errors\nconst initializeDB = () => {\n  console.log(\"entra, pero no hará nada por no poder.\");\n  if (isEmpty(\"documents\", \"temp\")) {\n    initDocument();\n  }\n  if (isEmpty(\"forms\", \"dailyForm\")) {\n    initDailyForm();\n  }\n};\n\nexport { dataFilter, initializeDB };\n","import Localbase from \"localbase\";\nimport { Document, initDocument } from \"./../init_data/initDocuments\";\nimport { dataFilter } from \"./utils\";\nlet db = new Localbase(\"memories\");\n\nconst getDocument = async (key = \"temp\") => {\n  const document = db\n    .collection(\"documents\")\n    .doc(key)\n    .get()\n    .then((document) => {\n      if (!document) initDocument();\n      return document;\n    });\n  return document;\n};\n\nconst getDocuments = async () => {\n  // Adds \"id\" prop for table-ing purpose\n  return db\n    .collection(\"documents\")\n    .get({ keys: true })\n    .then((docs) => {\n      docs = dataFilter(docs);\n      return docs.map((doc, i) => ({ ...doc, id: i }));\n    });\n};\n\nconst updateDocument = (document, key) => {\n  db.collection(\"documents\")\n    .doc(key)\n    .update(\n      {\n        ...Document,\n        ...document,\n        modificationDate: new Date(),\n      },\n      key\n    );\n};\n\nconst saveDocument = (document) => {\n  db.collection(\"documents\").add({\n    ...Document,\n    ...document,\n    creationDate: new Date(),\n  });\n};\n\nconst deleteDocuments = (keys_list) => {\n  const delete_dump = keys_list.map(({ key }) =>\n    db.collection(\"documents\").doc(key).delete()\n  );\n  Promise.all(delete_dump);\n};\n\nexport {\n  getDocument,\n  getDocuments,\n  saveDocument,\n  updateDocument,\n  deleteDocuments,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { DefaultEditor } from \"react-simple-wysiwyg\";\nimport { Paper, TextField, Grid, ButtonGroup, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport {\n  getDocument,\n  saveDocument,\n  updateDocument,\n} from \"../managers/documents\";\nimport { Document } from \"../init_data/initDocuments\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: \"1rem\",\n  },\n  title: {\n    fontWeight: 700,\n    fontSize: \"3rem\",\n    paddingBottom: \"1rem\",\n  },\n  buttonGroup: {\n    paddingTop: \"1rem\",\n  },\n}));\n\nfunction Note() {\n  const classes = useStyles();\n  const { key = \"temp\" } = useParams();\n  let history = useHistory();\n  const [document, setDocument] = useState({});\n\n  useEffect(() => {\n    getDocument(key).then((data) => {\n      setDocument(data);\n    });\n  }, [key]);\n\n  const onChangeEditor = (e) => {\n    setDocument((other) => ({ ...other, content: e.target.value }));\n    updateDocument(document, key);\n  };\n  const onChangeTitle = (e) => {\n    setDocument((other) => ({ ...other, title: e.target.value }));\n    updateDocument(document, key);\n  };\n\n  const handleSaveDocument = () => {\n    if (key !== \"temp\") {\n      updateDocument(document, key);\n    } else {\n      saveDocument(document);\n    }\n    setDocument({ ...Document });\n  };\n\n  const handleResetDocument = (history) => {\n    setDocument({ ...Document });\n    if (key !== \"temp\") {\n      history.push(\"/\");\n    }\n  };\n\n  if (!document) return <Grid></Grid>;\n\n  return (\n    <Paper elevation={3} className={classes.paper}>\n      <Grid container direction=\"column\">\n        <Grid item>\n          <TextField\n            id=\"title\"\n            label=\"Title\"\n            variant=\"outlined\"\n            className={classes.title}\n            onChange={onChangeTitle}\n            value={document?.title ?? \"\"}\n            fullWidth\n          />\n        </Grid>\n\n        <Grid item>\n          <DefaultEditor value={document.content} onChange={onChangeEditor} />\n        </Grid>\n\n        <Grid\n          item\n          container\n          justifyContent=\"flex-end\"\n          className={classes.buttonGroup}\n        >\n          <ButtonGroup\n            variant=\"contained\"\n            color=\"primary\"\n            aria-label=\"Button Group\"\n          >\n            <Button\n              aria-label=\"Add new Daily Form\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSaveDocument}\n              startIcon={<SaveIcon fontSize=\"large\" />}\n            >\n              Save\n            </Button>\n            <Button\n              aria-label=\"Reset the Daily Form\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => handleResetDocument(history)}\n              startIcon={<DeleteIcon fontSize=\"large\" />}\n            >\n              Reset\n            </Button>\n          </ButtonGroup>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default Note;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport {\n  Grid,\n  Paper,\n  Button,\n  IconButton,\n  Typography,\n  ButtonGroup,\n} from \"../../node_modules/@material-ui/core\";\nimport { makeStyles } from \"../../node_modules/@material-ui/core/styles\";\nimport { getDocuments, deleteDocuments } from \"../managers/documents\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: \"100%\",\n  },\n  section: {\n    width: \"100%\",\n  },\n  sectionTitle: {\n    padding: \"1rem\",\n    justifyContent: \"space-between\",\n  },\n  sectionTable: { height: 650 },\n  editButton: { textDecoration: \"none\" },\n}));\n\nconst Archive = () => {\n  const classes = useStyles();\n  const [selection, setSelection] = useState([]);\n  const [documents, setDocuments] = useState([]);\n\n  useEffect(() => {\n    getDocuments().then((documents) => {\n      setDocuments(documents);\n    });\n  }, []);\n  const handleDeleteWrittenMemories = () => {\n    deleteDocuments(selection);\n    setSelection([]);\n  };\n  const handleSelectionChange = (newSelection) => {\n    setSelection(\n      (prevSelection) => prevSelection + newSelection.selectionModel\n    );\n  };\n  const writtenMemoriesColumns = [\n    {\n      field: \"id\",\n      headerName: \"ID\",\n      id: 0,\n      width: 100,\n      render: (rowData) => rowData.tableData.id + 1,\n    },\n    {\n      field: \"title\",\n      headerName: \"Memory Title\",\n      id: 1,\n      width: 300,\n    },\n    {\n      field: \"content\",\n      headerName: \"Piece of text\",\n      id: 2,\n      width: 300,\n    },\n    {\n      field: \"edit\",\n      headerName: \"Edit\",\n      id: 3,\n      width: 110,\n      renderCell: (params) => (\n        <Link\n          to={`/editor/${encodeURIComponent(params.row.key)}`}\n          className={classes.editButton}\n        >\n          <ButtonGroup\n            variant=\"contained\"\n            color=\"primary\"\n            aria-label=\"Button Group\"\n          >\n            <Button\n              aria-label=\"Add new Daily Form\"\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<EditIcon fontSize=\"large\" />}\n            >\n              Edit\n            </Button>\n          </ButtonGroup>\n        </Link>\n      ),\n    },\n  ];\n\n  return (\n    <Paper>\n      <Grid container className={classes.paper}>\n        <Grid container item className={classes.section} direction=\"column\">\n          <Grid\n            container\n            item\n            alignItems=\"center\"\n            className={classes.sectionTitle}\n          >\n            <Typography variant=\"h4\">Written Memories</Typography>\n            <IconButton\n              variant=\"contained\"\n              size=\"small\"\n              onClick={handleDeleteWrittenMemories}\n            >\n              <DeleteIcon style={{ color: \"FF0000\" }} />\n            </IconButton>\n          </Grid>\n          <Grid item className={classes.sectionTable}>\n            <DataGrid\n              rows={documents}\n              columns={writtenMemoriesColumns}\n              pageSize={10}\n              checkboxSelection\n              disableSelectionOnClick\n              autoheight\n              onSelectionModelChange={(e) => handleSelectionChange(e)}\n              selectionModel={selection}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Archive;\n","import Localbase from \"localbase\";\nimport { Form, formTypes } from \"./../init_data/initForms\";\nimport { dataFilter } from \"./utils\";\n\nlet db = new Localbase(\"memories\");\n\nconst getDailyForm = async (key = \"dailyForm\") => {\n  let dailyForm = await db\n    .collection(\"forms\")\n    .doc(key)\n    .get()\n    .then((form) => form);\n  dailyForm[\"questions\"] = await db\n    .collection(\"questions\")\n    .get({ keys: true })\n    .then((result) => {\n      result = dataFilter(result, ({ parent_form }) => parent_form === key);\n      return result.map((props) => ({ ...props, status: \"db\" }));\n    });\n  dailyForm.questions.sort((a, b) => {\n    if (a.order < b.order) {\n      return -1;\n    }\n    if (a.order > b.order) {\n      return 1;\n    }\n    return 0;\n  });\n  return dailyForm;\n};\n\nconst saveDailyFormValues = (values_list) => {\n  const data_dump = [];\n  values_list\n    .filter(({ value }) => value === true)\n    .forEach(({ value, parentForm, parentQuestion }) => {\n      data_dump.push(\n        db.collection(\"values\").add({\n          value,\n          creationDate: new Date(),\n          parentForm,\n          parentQuestion,\n        })\n      );\n    });\n  Promise.all(data_dump);\n};\n\nconst saveDailyFormQuestions = (questions_list) => {\n  if (questions_list.length < 1) return false;\n  // Filter empty titles, to avoid bad behaviour\n  questions_list = questions_list.filter((q) => q.title.length > 0);\n  const new_questions_dump = questions_list\n    .filter((q) => q.status === \"new\")\n    .map((q) => db.collection(\"questions\").add({ ...Form, ...q }));\n  const del_questions_dump = questions_list\n    .filter((q) => q.status === \"del\")\n    .map((q) => db.collection(\"questions\").doc(q.key).delete());\n  const mod_questions_dump = questions_list\n    .filter((q) => q.status === \"mod\")\n    .map((q) =>\n      db\n        .collection(\"questions\")\n        .doc(q.key)\n        .update({ ...q, modificationDate: new Date() })\n    );\n  Promise.all(new_questions_dump, del_questions_dump, mod_questions_dump);\n};\n\nconst getForms = async () => {\n  let forms = await db\n    .collection(\"forms\")\n    .get({ keys: true })\n    .then((result) =>\n      dataFilter(result, ({ type }) => type !== formTypes.daily)\n    );\n  return forms;\n};\n\nexport { getDailyForm, getForms, saveDailyFormValues, saveDailyFormQuestions };\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Typography,\n  Checkbox,\n  Tooltip,\n  Button,\n  ButtonGroup,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Save } from \"@material-ui/icons\";\n\nimport { saveDailyFormValues } from \"../managers/forms\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: \"1rem\",\n    padding: \"1rem\",\n  },\n  questionTitle: {\n    margint: theme.spacing(1),\n  },\n  editDailyFormQuestion: {\n    marginTop: \".5rem\",\n    marginBottom: \".5rem\",\n  },\n  switch: {\n    marginRight: \"1rem\",\n  },\n  buttonGroup: {\n    marginTop: \"1rem\",\n  },\n}));\n\nexport default function DailyFormCheck({ dailyForm }) {\n  const classes = useStyles();\n  const [tempDailyFormValues, setTempDailyFormValues] = useState({});\n\n  useEffect(() => {\n    if (dailyForm?.questions) {\n      setTempDailyFormValues(initValuesDailyForm(dailyForm));\n    }\n  }, [dailyForm]);\n\n  if (!dailyForm) return <></>;\n\n  let initValuesDailyForm = (form) =>\n    form.questions.map(({ key }) => ({\n      value: false,\n      parentForm: \"dailyForm\",\n      parentQuestion: key,\n    }));\n\n  const handleDailyFormChange = (e) => {\n    e.preventDefault();\n    setTempDailyFormValues((prev) =>\n      prev.map((q, i) => {\n        if (i === Number(e.target.id)) {\n          return {\n            ...q,\n            value: e.target.checked,\n          };\n        }\n        return q;\n      })\n    );\n  };\n\n  const handleSaveDailyFormValues = () => {\n    saveDailyFormValues(tempDailyFormValues);\n    setTempDailyFormValues(initValuesDailyForm(dailyForm));\n  };\n\n  if (!(dailyForm?.questions && tempDailyFormValues.length > 0))\n    return <Grid></Grid>;\n  return (\n    <>\n      <Grid item container justify=\"flex-end\" className={classes.buttonGroup}>\n        <ButtonGroup\n          variant=\"contained\"\n          color=\"primary\"\n          aria-label=\"contained primary button group\"\n        >\n          <Button\n            aria-label=\"Save the changes on the Daily Form\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSaveDailyFormValues}\n            startIcon={<Save />}\n          >\n            Save!\n          </Button>\n        </ButtonGroup>\n      </Grid>\n      <Grid item container>\n        {dailyForm.questions.map(({ title, subtitle, help }, i) => (\n          <Grid container item alignItems=\"center\" key={`container-${i}`}>\n            <Checkbox\n              checked={tempDailyFormValues[i].value}\n              key={i}\n              id={i.toString()}\n              onChange={handleDailyFormChange}\n              name={title}\n            />\n\n            <Tooltip\n              title={help ?? \"\"}\n              aria-label={subtitle}\n              key={`tt-${i}`}\n              placement=\"right\"\n            >\n              <Typography variant=\"body1\">{title}</Typography>\n            </Tooltip>\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  ButtonGroup,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  AddCircle,\n  Delete,\n  Replay,\n  Save,\n  DragIndicator,\n} from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { saveDailyFormQuestions } from \"../managers/forms\";\nimport { questionTypes, questionSubtypes } from \"./../init_data/initForms\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: \"1rem\",\n    padding: \"1rem\",\n  },\n  questionTitle: {\n    margint: theme.spacing(1),\n  },\n  editDailyFormQuestion: {\n    marginTop: \".5rem\",\n    marginBottom: \".5rem\",\n  },\n  editDailyFormQuestionField: {\n    width: \"30%\",\n  },\n  switch: {\n    marginRight: \"1rem\",\n  },\n  buttonGroup: {\n    marginTop: \"1rem\",\n  },\n  iconButton: {\n    width: \"5%\",\n  },\n}));\n\nexport default function DailyFormEdit({ dailyForm, setUpdate }) {\n  const classes = useStyles();\n  const [editDailyFormQuestions, setEditDailyFormQuestions] = useState([]);\n\n  useEffect(() => {\n    if (dailyForm?.questions) {\n      setEditDailyFormQuestions(dailyForm.questions);\n    }\n  }, [dailyForm]);\n\n  if (!dailyForm?.questions) {\n    return <Grid></Grid>;\n  }\n\n  const handleSaveDailyFormQuestions = () => {\n    saveDailyFormQuestions(editDailyFormQuestions);\n    setEditDailyFormQuestions(dailyForm.questions);\n    setUpdate(true);\n  };\n\n  const handleEditQuestionDailyForm = (e) => {\n    const [questionOrder, questionName] = e.target.id.split(\"-\");\n    console.log(questionOrder, questionName);\n    setEditDailyFormQuestions((prevQuestions) =>\n      prevQuestions.map(({ order, status, ...other }) => {\n        if (order === Number(questionOrder)) {\n          return {\n            ...other,\n            order,\n            status: status === \"db\" ? \"mod\" : status,\n            [questionName]: e.target.value,\n          };\n        }\n        return { ...other, status, order };\n      })\n    );\n  };\n\n  const handleResetEditDailyForm = () => {\n    setEditDailyFormQuestions(dailyForm.questions);\n  };\n\n  const handleAddQuestion = () => {\n    setEditDailyFormQuestions((prevEditQuestions) => [\n      ...prevEditQuestions,\n      {\n        key: `tempKey${Math.random() * 100000000}`,\n        order: prevEditQuestions.length + 1,\n        title: \"\",\n        subtitle: \"\",\n        help: \"\",\n        creationDate: new Date(),\n        modificationDate: new Date(),\n        type: questionTypes.simple,\n        subType: questionSubtypes.square,\n        parent_form: \"dailyForm\",\n        status: \"new\",\n      },\n    ]);\n  };\n\n  const handleDeleteDailyQuestion = (key) => {\n    setEditDailyFormQuestions((prevEditQuestions) =>\n      prevEditQuestions.map((prevQuestion) => {\n        if (prevQuestion.key === key) {\n          return {\n            ...prevQuestion,\n            status: prevQuestion.status === \"del\" ? \"mod\" : \"del\",\n          };\n        }\n        return { ...prevQuestion };\n      })\n    );\n  };\n\n  const handleDrag = (e) => {\n    const source = e.source.index;\n    const destination = e.destination.index;\n    if (source === destination) return true;\n    setEditDailyFormQuestions((prevEditQuestions) => {\n      let questions = [...prevEditQuestions];\n      let auxQuestion = { ...questions[source] };\n      questions.splice(source, 1);\n      questions.splice(destination, 0, auxQuestion);\n      return [\n        ...questions.map((question, i) => ({\n          ...question,\n          order: i,\n          status: question.status === \"db\" ? \"mod\" : question.status,\n        })),\n      ];\n    });\n  };\n\n  if (!(dailyForm?.questions && editDailyFormQuestions?.length))\n    return <Grid></Grid>;\n\n  return (\n    <>\n      <Grid item container justify=\"flex-end\" className={classes.buttonGroup}>\n        <ButtonGroup\n          variant=\"contained\"\n          color=\"primary\"\n          aria-label=\"contained primary button group\"\n        >\n          <Button\n            aria-label=\"Add new Daily Form\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleAddQuestion}\n            startIcon={<AddCircle />}\n          >\n            ADD\n          </Button>\n          <Button\n            aria-label=\"Reset the Daily Form\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleResetEditDailyForm}\n            startIcon={<Replay />}\n          >\n            Reset\n          </Button>\n          <Button\n            aria-label=\"Save the changes on the Daily Form\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSaveDailyFormQuestions}\n            startIcon={<Save />}\n          >\n            Save!\n          </Button>\n        </ButtonGroup>\n      </Grid>\n      <Grid item container>\n        <DragDropContext onDragEnd={handleDrag}>\n          <Droppable droppableId=\"editDailyFormDND\">\n            {(provided) => {\n              return (\n                <div ref={provided.innerRef} {...provided.droppableProps}>\n                  {editDailyFormQuestions.map(\n                    ({ order, title, subtitle, help, key, status }, i) => {\n                      const deleted = status === \"del\";\n                      return (\n                        <Draggable\n                          draggableId={key}\n                          index={i}\n                          key={`draggableElem-${key}`}\n                        >\n                          {(provided) => (\n                            <Grid\n                              container\n                              item\n                              key={`edit-${key}`}\n                              alignItems=\"center\"\n                              className={classes.editDailyFormQuestion}\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                            >\n                              <DragIndicator fontSize=\"large\" />\n                              <TextField\n                                key={`${order}-0-${key}`}\n                                onChange={handleEditQuestionDailyForm}\n                                defaultValue={title}\n                                variant=\"outlined\"\n                                label=\"title\"\n                                id={`${order}-title-${key}`}\n                                disabled={deleted}\n                                className={classes.editDailyFormQuestionField}\n                              />\n                              <TextField\n                                key={`${order}-1-${key}`}\n                                onChange={handleEditQuestionDailyForm}\n                                defaultValue={subtitle}\n                                variant=\"outlined\"\n                                label=\"subtitle\"\n                                id={`${order}-subtitle-${key}`}\n                                disabled={deleted}\n                                className={classes.editDailyFormQuestionField}\n                              />\n                              <TextField\n                                key={`${order}-2-${key}`}\n                                onChange={handleEditQuestionDailyForm}\n                                defaultValue={help}\n                                variant=\"outlined\"\n                                label=\"help\"\n                                id={`${order}-help-${key}`}\n                                disabled={deleted}\n                                className={classes.editDailyFormQuestionField}\n                              />\n                              <IconButton\n                                className={classes.iconButton}\n                                aria-label={`Deletes question ${title} from the dailyForm`}\n                                onClick={() => handleDeleteDailyQuestion(key)}\n                              >\n                                <Delete\n                                  color={deleted ? \"primary\" : \"secondary\"}\n                                  fontSize=\"large\"\n                                />\n                              </IconButton>\n                            </Grid>\n                          )}\n                        </Draggable>\n                      );\n                    }\n                  )}\n                  {provided.placeholder}\n                </div>\n              );\n            }}\n          </Droppable>\n        </DragDropContext>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  Switch,\n  ButtonGroup,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { getDailyForm } from \"../managers/forms\";\nimport DailyFormCheck from \"./DailyFormCheck\";\nimport DailyFormEdit from \"./DailyFormEdit\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: \"1rem\",\n    padding: \"1rem\",\n  },\n  questionTitle: {\n    margint: theme.spacing(1),\n  },\n  editDailyFormQuestion: {\n    marginTop: \".5rem\",\n    marginBottom: \".5rem\",\n  },\n  switch: {\n    marginRight: \"1rem\",\n  },\n}));\n\nexport default function DailyForm() {\n  // There is a warining because of the GroupButton having a lack of the Paper or button properties. The following ones are to blame:\n  //    disableElevation={false}\n  //    disableFocusRipple={false}\n  //    disableRipple={false}\n  //    fullWidth = { false}\n  // Seen here some possible explanation: https://stackoverflow.com/questions/66570397/react-material-ui-warning-react-does-not-recognize-the-attribute-prop-on-a\n  // TODO: Fix it\n\n  const classes = useStyles();\n  const [dailyForm, setDailyForm] = useState([]);\n  const [edit, setEdit] = useState(false);\n  const [update, setUpdate] = useState(false);\n\n  useEffect(() => {\n    getDailyForm().then((data) => {\n      setDailyForm(data);\n      setUpdate(false);\n    });\n  }, [update]);\n\n  const onEditChange = (e) => setEdit(e.target.checked);\n\n  return (\n    <Paper className={classes.paper}>\n      <Grid container direction=\"column\" className={classes.dailyForm}>\n        <Grid item container justify=\"space-between\" alignItems=\"flex-end\">\n          <Grid item>\n            <Typography variant=\"h4\">{dailyForm.title}</Typography>\n            <Typography variant=\"h6\">{dailyForm.subtitle}</Typography>\n          </Grid>\n          <Grid item>\n            <ButtonGroup\n              variant=\"contained\"\n              color=\"primary\"\n              aria-label=\"contained primary button group\"\n            >\n              <FormControlLabel\n                control={\n                  <Switch\n                    inputProps={{\n                      \"aria-label\": \"Change to editor mode for the Daily Form\",\n                    }}\n                    checked={edit}\n                    onChange={onEditChange}\n                    color=\"primary\"\n                  />\n                }\n                label=\"Edit\"\n                labelPlacement=\"start\"\n                className={classes.switch}\n              />\n            </ButtonGroup>\n          </Grid>\n        </Grid>\n        {edit ? (\n          <DailyFormEdit dailyForm={dailyForm} setUpdate={setUpdate} />\n        ) : (\n          <DailyFormCheck dailyForm={dailyForm} />\n        )}\n      </Grid>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport DailyForm from \"./DailyForm\";\n// import EditForms from \"./EditForms\";\n\nconst FormsHome = () => {\n  return (\n    <>\n      <DailyForm />\n      {/* <ChooseForm /> */}\n      {/* <EditForms /> */}\n    </>\n  );\n};\n\nexport default FormsHome;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Note from \"./components/Note\";\nimport Archive from \"./components/Archive\";\nimport FormsHome from \"./components/FormsHome\";\nimport { initializeDB } from \"./managers/utils\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport SpeakerNotesIcon from \"@material-ui/icons/SpeakerNotes\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\nimport AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 200;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n    backgroundColor: theme.palette.primary,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n}));\nexport default function App(props) {\n  const { container } = props;\n  const classes = useStyles();\n\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const links = [\n    {\n      text: \"Editor\",\n      link: \"/editor\",\n      icon: <PostAddIcon />,\n      component: <Placeholder />,\n      exact: false,\n    },\n    {\n      text: \"Archive\",\n      link: \"/archive\",\n      icon: <LibraryBooksIcon />,\n      component: <Archive />,\n      exact: false,\n    },\n    {\n      text: \"Forms\",\n      link: \"/forms\",\n      icon: <SpeakerNotesIcon />,\n      component: <FormsHome />,\n      exact: false,\n    },\n    {\n      text: \"Stats\",\n      link: \"/stats\",\n      icon: <BarChartIcon />,\n      component: <Placeholder />,\n      exact: false,\n    },\n    {\n      text: \"Alarms\",\n      link: \"/alarms\",\n      icon: <AccessAlarmIcon />,\n      component: <Placeholder />,\n      exact: false,\n    },\n    {\n      text: \"Home\",\n      link: \"/\",\n      icon: <HomeIcon />,\n      component: <Note />,\n      exact: false,\n    },\n    {\n      text: \"About\",\n      link: \"/about\",\n      icon: <InfoIcon />,\n      component: <Placeholder />,\n      exact: false,\n    },\n    {\n      text: \"Settings\",\n      link: \"/settings\",\n      icon: <SettingsIcon />,\n      component: <Placeholder />,\n      exact: false,\n    },\n  ];\n\n  const DrawerComponent = () => {\n    return (\n      <React.Fragment>\n        <List>\n          <ListItem key=\"initDB\" onClick={initializeDB}>\n            <Button fullWidth color=\"secondary\" variant=\"contained\">\n              InitDB\n            </Button>\n          </ListItem>\n          {links.map(({ text, link, icon }, index) => (\n            <ListItem key={text} component={Link} to={link}>\n              <ListItemIcon>{icon}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Memories\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <BrowserRouter>\n        <nav className={classes.drawer} aria-label=\"Sidebar\">\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={container}\n              variant=\"temporary\"\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              ModalProps={{\n                keepMounted: true, // Better open performance on mobile.\n              }}\n            >\n              <div className={classes.drawerHeader}>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"Drawer\"\n                  edge=\"end\"\n                  onClick={handleDrawerToggle}\n                >\n                  <ChevronLeftIcon />\n                </IconButton>\n              </div>\n              <Divider />\n              <DrawerComponent />\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              <div className={classes.drawerHeader}>\n                <IconButton>\n                  <MenuIcon />\n                </IconButton>\n              </div>\n              <Divider />\n              <DrawerComponent />\n            </Drawer>\n          </Hidden>\n        </nav>\n\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n\n          <Switch>\n            <Route path=\"/about\" component={Placeholder} />\n            <Route path=\"/archive\" component={Archive} />\n            <Route path=\"/forms\" component={FormsHome} />\n            <Route path=\"/stats\" component={Placeholder} />\n            <Route path=\"/editor/:key\" component={Note} />\n            <Route path=\"/editor/\" component={Note} />\n            <Route path=\"/alarms/\" component={Placeholder} />\n            <Route path=\"/settings/\" component={Placeholder} />\n            <Route exact path=\"/\" component={Note} />\n          </Switch>\n        </main>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nfunction Placeholder() {\n  return <h2>Hello, I'm a placeholder</h2>;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import { red } from '@material-ui/core/colors';\nimport { createTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#FBD96E\",\n    },\n    secondary: {\n      main: \"#64E38A\",\n    },\n  },\n  typography: {\n    subtitle1: {\n      fontSize: \"0.8rem\",\n    },\n  },\n});\n\nexport default theme;\n","import ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}